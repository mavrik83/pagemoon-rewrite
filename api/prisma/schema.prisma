// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String            @unique
  firstName String            @map("first_name")
  lastName  String            @map("last_name")
  isAdmin   Boolean           @default(true) @map("is_admin")
  createdAt DateTime?         @default(now()) @map("created_at")
  updatedAt DateTime?         @updatedAt @map("updated_at")
  articles  LongFormContent[]
  tags      Tag[]

  @@map("users")
}

model LongFormContent {
  id        String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title     String
  body      String
  type      LongFormContentType @default(REVIEW)
  createdAt DateTime?           @default(now()) @map("create_at")
  updatedAt DateTime?           @updatedAt @map("updated_at")
  user      User                @relation(fields: [userId], references: [id])
  userId    String              @map("user_id") @db.Uuid
  tags      Tag[]

  @@map("long_form_content")
}

enum LongFormContentType {
  ARTICLE
  REVIEW
  BLOG
  POST
  NEWS_LETTER
}

model Tag {
  id        String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String            @unique
  createdAt DateTime?         @default(now()) @map("created_at")
  updatedAt DateTime?         @updatedAt @map("updated_at")
  user      User              @relation(fields: [userId], references: [id])
  userId    String            @map("user_id") @db.Uuid
  articles  LongFormContent[]

  @@map("tags")
}
